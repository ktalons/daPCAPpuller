name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -e .[gui,datetime]

      - name: Build GUI binary
        shell: bash
        run: |
          pyinstaller --onefile --windowed --name PCAPpullerGUI gui_pcappuller.py
          mkdir -p release
          if [ "$RUNNER_OS" = "Windows" ]; then
            mv dist/PCAPpullerGUI.exe "release/PCAPpullerGUI-windows.exe"
          elif [ "$RUNNER_OS" = "macOS" ]; then
            mv dist/PCAPpullerGUI "release/PCAPpullerGUI-macos"
          else
            mv dist/PCAPpullerGUI "release/PCAPpullerGUI-linux"
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gui-binaries-${{ matrix.os }}
          path: release/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: gui-binaries-*
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}